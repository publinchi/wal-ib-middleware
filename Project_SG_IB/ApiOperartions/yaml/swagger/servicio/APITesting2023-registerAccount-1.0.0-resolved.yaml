---
openapi: 3.0.0
info:
  title: Register Third-Party Account
  description: Service to register third-party accounts same bank and SPEI.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/APITesting2023/registerAccount/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: registerAccount
  description: Service to register third-party accounts same bank and SPEI.
paths:
  /apiOperations/onbording/registerAccount:
    post:
      tags:
      - registerAccount
      summary: Register Third-Party Account
      operationId: registerAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegisterThirdParty'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response getMunicipalityByState
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRegisterThirdParty'
      security:
      - bearerAuth: []
components:
  schemas:
    RequestRegisterThirdParty:
      type: object
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
        phoneNumber:
          maxLength: 10
          type: string
          description: Customer phone number
          example: "525568576731"
        productOwner:
          type: string
          description: Product Owner
          example: mi cuenta Trafalgar
        productAlias:
          type: string
          description: Product Alias
          example: Carlos Olmos
        productId:
          type: string
          description: Product ID
          example: "10"
        productNumber:
          type: string
          description: Product number
          example: "5568576731"
        productOwnerLastName:
          type: string
          description: Product Owner Last Name
          example: ""
        productOwnerSecLastName:
          type: string
          description: Product Owner Sec Last Name
          example: ""
        productOwnerCurp:
          type: string
          description: Product Owner Curp
          example: ""
        productOwnerMail:
          type: string
          description: Product Owner Mail
          example: ""
        currencyId:
          type: string
          description: Currency ID
          example: "0"
        channelId:
          type: string
          description: Channel ID
          example: "8"
        typeDestinationId:
          type: string
          description: Type Destination ID
          example: "0"
        typeIdDestination:
          type: string
          description: Type Destination ID
          example: A
        productOwnerId:
          type: string
          description: Product Owner ID
          example: ""
        localBankId:
          type: string
          description: Local Bank ID
          example: "40012"
    ResponseRegisterThirdParty:
      type: object
      properties:
        success:
          maximum: 1
          type: boolean
          description: Result process
          example: true
        message:
          $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code:
          maxLength: 10
          type: integer
          description: Result Code
          example: 0
        message:
          maxLength: 500
          type: string
          description: Result Mesagge Code
          example: success
  responses:
    Unauthorized:
      description: Unauthorized service
    NotFound:
      description: The information does not exist
    BadRequest:
      description: The data sent is incorrect or corrupted
    ServerError:
      description: An error occurred on the server
    "403Forbidden":
      description: The request has been denied.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
