---
openapi: 3.0.0
info:
  title: Walmart API
  description: Walmart API Definition
  version: 1.0.0
servers:
- url: http://13.52.129.211:8080/CWCREST/services/resources/cobis/api/Walmart/ServiceContractOperations/
  description: Base URL
tags:
- name: Get Catalog
  description: This Service is used for get data catalogs
- name: Generate and send OTP
  description: Service to generate and send an OTP to the client.
- name: Encrypt Data
  description: Service to encrypt Data Client
paths:
  /common/getCatalog:
    post:
      tags:
      - Get Catalog
      summary: Get catalog
      operationId: getCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCatalog'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Get data catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCatalog'
      security:
      - bearerAuth: []
  /password/generateTransactionFactor:
    post:
      tags:
      - Generate and send OTP
      summary: Service to generate and send an OTP to the client
      operationId: generateTransactionFactor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOtp'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Get OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOtp'
      security:
      - bearerAuth: []
  /security/encryptData:
    post:
      tags:
      - Encrypt Data
      summary: Encrypt Data
      operationId: encryptData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEncriptData'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response EncryptData
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEncriptData'
      security:
      - bearerAuth: []
components:
  schemas:
    Message:
      type: object
      properties:
        code:
          maxLength: 10
          type: integer
          description: Result Code
          example: 0
        message:
          maxLength: 500
          type: string
          description: Result Mesagge Code
          example: success
    CatalogueItems:
      type: object
      properties:
        code:
          type: string
          description: id catalog
          example: "5"
        name:
          type: string
          description: catalog value
          example: 5 ó mas
    RequestCatalog:
      properties:
        catalogueTable:
          maxLength: 20
          minLength: 1
          type: string
          description: Catalog  Name
          example: cl_referencia_tiempo
    ResponseCatalog:
      type: object
      properties:
        catalogueItems:
          type: array
          description: Catalogo de items
          items:
            $ref: '#/components/schemas/CatalogueItems'
        success:
          type: boolean
          description: message result process
          example: true
        message:
          $ref: '#/components/schemas/Message'
    RequestOtp:
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
    ResponseOtp:
      properties:
        success:
          type: boolean
          description: result process
          example: true
        message:
          $ref: '#/components/schemas/Message'
    RequestEncriptData:
      type: object
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
        password:
          maxLength: 200
          type: string
          description: Phrase or password to be encrypted
          example: 44ssw0rd*
    ResponseEncriptData:
      type: object
      properties:
        success:
          maxLength: 1
          type: boolean
          description: Indicates whether the service was executed
          example: true
        password:
          maxLength: 200
          type: string
          description: Phrase or password encrypted
          example: gs7VonfE7UZukby0Yglx…
        message:
          $ref: '#/components/schemas/Message'        
  responses:
    Unauthorized:
      description: Unauthorized service
    NotFound:
      description: The information does not exist
    BadRequest:
      description: The data sent is incorrect or corrupted
    ServerError:
      description: An error occurred on the server
    "403Forbidden":
      description: The request has been denied.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
