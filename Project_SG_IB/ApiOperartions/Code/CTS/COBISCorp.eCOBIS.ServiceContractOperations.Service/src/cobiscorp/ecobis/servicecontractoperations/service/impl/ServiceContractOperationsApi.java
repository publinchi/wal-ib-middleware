
/************************************************************/
/*                     IMPORTANTE                           */
/*   Esta aplicacion es parte de los  paquetes bancarios    */
/*   propiedad de COBISCORP.                                */
/*   Su uso no autorizado queda  expresamente  prohibido    */
/*   asi como cualquier alteracion o agregado hecho  por    */
/*   alguno de sus usuarios sin el debido consentimiento    */
/*   por escrito de COBISCORP.                              */
/*   Este programa esta protegido por la ley de derechos    */
/*   de autor y por las y por las convenciones              */
/*   internacionales de  propiedad intelectual. Su uso no   */
/*   autorizado dara  derecho a  COBISCORP para obtener     */
/*   ordenes de  secuestro o retencion y  para perseguir    */
/*   penalmente a los autores de cualquier infraccion.      */
/************************************************************/
/*   This code was generated by CEN-SG.                     */
/*   Changes to this file may cause incorrect behavior      */
/*   and will be lost if the code is regenerated.           */
/************************************************************/

package  cobiscorp.ecobis.servicecontractoperations.service.impl;

import cobiscorp.ecobis.commons.dto.ServiceRequestTO;
import cobiscorp.ecobis.commons.dto.ServiceResponseTO;
import com.cobiscorp.cobis.cts.domains.ICTSTypes;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.*;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.CTSInputParam.IOType;
import com.cobiscorp.cobis.cts.sdf.service.CTSAbstractService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSServiceInterceptors;
import cobiscorp.ecobis.servicecontractoperations.service.IServiceContractOperationsApi;

@CTSService
public class ServiceContractOperationsApi extends CTSAbstractService implements IServiceContractOperationsApi {

	@CTSProcedure(
		name = "cobis..sp_api_create_customer",   
		objectRequest = {
		
			@CTSRequest(
				name = "inCreateCustomerRequest",
				input = {
				
					@CTSInputParam(field = "activity", param = "@i_activity_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "referenceAddress", param = "@i_address", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "addressTypeCode", param = "@i_address_type_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amountTransaction", param = "@i_amount_transaction", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "averageBalance", param = "@i_average_balance", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "birthDate", param = "@i_birthdate", dataType = ICTSTypes.SQLDATETIME),
					@CTSInputParam(field = "city", param = "@i_city_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "countryBirth", param = "@i_countrybirth_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "civilStatus", param = "@i_civil_status", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "companyName", param = "@i_company_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "electronicTransfer", param = "@i_electronic_transfer", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "externalNumber", param = "@i_externalnumber", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "gender", param = "@i_gender_code", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "geolocalizationLatitude", param = "@i_geolocatization_latitude", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "geolocalizationLongitude", param = "@i_geolocatization_longitude", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "idNumber", param = "@i_identification_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "idType", param = "@i_identification_type_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identityValidated", param = "@i_identity_validated", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "incomeLevel", param = "@i_incomelevel", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "incomeLevelEntity", param = "@i_incomelevel_entity", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "internalNumber", param = "@i_internalnumber", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "lastName", param = "@i_lastname", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "legalIncomeSource", param = "@i_legalincomesource", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "email", param = "@i_mail", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "firtname", param = "@i_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nationality", param = "@i_nationality", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "noConnectionIllegalNetworks", param = "@i_noconnectiontoillegalnetworks", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "phoneNumber", param = "@i_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "numberTransaction", param = "@i_number_transaction", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "occupation", param = "@i_occupation_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "operationType", param = "@i_operation_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "otherMexicanAccount", param = "@i_other_mexican_account", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "secondLastName", param = "@i_otherlastname", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "secondName", param = "@i_othername", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "paymentCard", param = "@i_payment_card", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "paymentRecharge", param = "@i_payment_recharge", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "servicesPay", param = "@i_payment_service", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "propertyTypeCode", param = "@i_propertytype_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "province", param = "@i_province_code", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "proviceBirth", param = "@i_provincebirth_code", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "provisionCash", param = "@i_provision_cash", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "rfc", param = "@i_rfc", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identificationNumber", param = "@i_secondaryidentification_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identificationType", param = "@i_secondaryidentification_type_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "street", param = "@i_street", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "subdivisioncode", param = "@i_subdivision_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "timeCurrentRecide", param = "@i_timeincurrentresidence", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "townCode", param = "@i_town_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "validityDate", param = "@i_validity_date", dataType = ICTSTypes.SQLDATETIME),
					@CTSInputParam(field = "zipcode", param = "@i_zipcode_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500094")
		},
  response = {
  
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "message.code", columnIndex = 1),
		    @CTSColumn(field = "message.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "customerCobisCode", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO createCustomer(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_encryptData", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestEncriptData",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "password", param = "@i_password", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500088")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseEncriptData",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseEncriptData.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "password", columnIndex = 2),
		    @CTSColumn(field = "message.message", columnIndex = 3),
		    @CTSColumn(field = "message.code", columnIndex = 4)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO encryptData(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..administra_token", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestOtp",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500090")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseOtp",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOtp.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "message.code", columnIndex = 2),
		    @CTSColumn(field = "message.message", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO generateTransactionFactor(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_get_catalog_data", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestCatalog",
				input = {
				
					@CTSInputParam(field = "catalogueTable", param = "@i_catalog", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500087")
		},
  response = {
  
    @CTSResponse(
      name = "returnCatalogueItems",
      type = cobiscorp.ecobis.datacontractoperations.dto.CatalogueItems.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "name", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnMessage",
      type = cobiscorp.ecobis.datacontractoperations.dto.Message.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseCatalog",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseCatalog.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getCatalog(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_getCustomer",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetUserEntityInformation",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500092")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseGetUserEntityInformation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetUserEntityInformation.class,
      columns = {
		    @CTSColumn(field = "registrationDate", columnIndex = 1),
		    @CTSColumn(field = "modifyDate", columnIndex = 2),
		    @CTSColumn(field = "completeName", columnIndex = 3),
		    @CTSColumn(field = "entityType", columnIndex = 4),
		    @CTSColumn(field = "identityCard", columnIndex = 5),
		    @CTSColumn(field = "firstName", columnIndex = 6),
		    @CTSColumn(field = "secondName", columnIndex = 7),
		    @CTSColumn(field = "gender", columnIndex = 8),
		    @CTSColumn(field = "birthDate", columnIndex = 9),
		    @CTSColumn(field = "firstName", columnIndex = 10),
		    @CTSColumn(field = "secondName", columnIndex = 11),
		    @CTSColumn(field = "rFC", columnIndex = 12),
		    @CTSColumn(field = "mail", columnIndex = 13),
		    @CTSColumn(field = "phoneNumber", columnIndex = 14),
		    @CTSColumn(field = "customerLevel", columnIndex = 15),
		    @CTSColumn(field = "addressId", columnIndex = 16),
		    @CTSColumn(field = "success", columnIndex = 17),
		    @CTSColumn(field = "message.code", columnIndex = 18),
		    @CTSColumn(field = "message.message", columnIndex = 19)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getUserEntityInformation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_validate_identity_card_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateCustomerIdentityCard",
				input = {
				
					@CTSInputParam(field = "identityCard", param = "@curp", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500093")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      singleResult = true,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      columns = {
		    @CTSColumn(field = "message.code", columnIndex = 1),
		    @CTSColumn(field = "message.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      columns = {
		    @CTSColumn(field = "externalCustomerId", columnIndex = 1)
      }
    )
  }
  
	)
	
      public ServiceResponseTO validateCustomerIdentityCard(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_validate_identity", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateIdentity",
				input = {
				
					@CTSInputParam(field = "type", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageAnverso", param = "@i_imageAnverso", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageReverso", param = "@i_imageReverso", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageDomicile", param = "@i_imageDomicile", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500091"),
				@CTSDefaultInputParam(value = "0", param = "@salida", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnMessage",
      type = cobiscorp.ecobis.datacontractoperations.dto.Message.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "numeroVerficacion", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "nombreEvento", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateIdentity(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
}
