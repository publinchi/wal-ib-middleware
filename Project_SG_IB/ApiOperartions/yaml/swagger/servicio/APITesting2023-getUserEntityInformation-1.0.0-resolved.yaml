---
openapi: 3.0.0
info:
  title: View Customer Information
  description: This API Service to consult general information of an existing client.
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/APITesting2023/getUserEntityInformation/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: getUserEntityInformation
  description: Service to consult general information of an existing client.
paths:
  /apiOperations/enrollment/getUserEntityInformation:
    post:
      tags:
      - getUserEntityInformation
      summary: View Customer Information
      operationId: getUserEntityInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetUserEntityInformation'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response getUserEntityInformation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetUserEntityInformation'
      security:
      - bearerAuth: []
components:
  schemas:
    RequestGetUserEntityInformation:
      type: object
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
    ResponseGetUserEntityInformation:
      type: object
      properties:
        success:
          maxLength: 1
          type: boolean
          description: Indicates whether the service was executed.
          example: true
        completeName:
          maxLength: 80
          type: string
          description: Customer's full name
          example: JOSE CARLOS OLMOS SOLIS
        entityType:
          maxLength: 5
          type: string
          description: P= Physical person, C= Legal person
          example: P
        identityCard:
          maxLength: 20
          type: string
          description: Unique Key of the Population, Registry (CURP) of customer
          example: OOSC861001HMCLLX17
        office:
          maxLength: 1
          type: string
          description: Office ID
          example: "1"
        regDate:
          maxLength: 25
          type: string
          description: Register date
          format: date
        official:
          maxLength: 1
          type: integer
          description: Officer ID
          example: 1
        firstSurName:
          maxLength: 16
          type: string
          description: Customer's last name
          example: OLMOS
        secondSurName:
          maxLength: 16
          type: string
          description: Customer's middle name
          example: SOLIS
        birthDate:
          maxLength: 25
          type: string
          description: Customer's date of birth
          example: /Date(504943800000)/
        firstName:
          maxLength: 50
          type: string
          description: Fisrt name
          example: JOSE
        modDate:
          maxLength: 25
          type: string
          description: Modified date
          example: /Date(504943800000)/
        message:
          $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        code:
          maxLength: 10
          type: integer
          description: Result Code
          example: 0
        message:
          maxLength: 500
          type: string
          description: Result Mesagge Code
          example: success
  responses:
    Unauthorized:
      description: Unauthorized service
    NotFound:
      description: The information does not exist
    BadRequest:
      description: The data sent is incorrect or corrupted
    ServerError:
      description: An error occurred on the server
    "403Forbidden":
      description: The request has been denied.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
