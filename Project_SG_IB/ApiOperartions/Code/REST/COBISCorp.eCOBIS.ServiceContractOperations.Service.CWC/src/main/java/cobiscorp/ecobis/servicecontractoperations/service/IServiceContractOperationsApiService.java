
    /************************************************************/
    /*                     IMPORTANTE                           */
    /*   Esta aplicacion es parte de los  paquetes bancarios    */
    /*   propiedad de COBISCORP.                                */
    /*   Su uso no autorizado queda  expresamente  prohibido    */
    /*   asi como cualquier alteracion o agregado hecho  por    */
    /*   alguno de sus usuarios sin el debido consentimiento    */
    /*   por escrito de COBISCORP.                              */
    /*   Este programa esta protegido por la ley de derechos    */
    /*   de autor y por las y por las convenciones              */
    /*   internacionales de  propiedad intelectual. Su uso no   */
    /*   autorizado dara  derecho a  COBISCORP para obtener     */
    /*   ordenes de  secuestro o retencion y  para perseguir    */
    /*   penalmente a los autores de cualquier infraccion.      */
    /************************************************************/
    /*   This code was generated by CEN-SG.                     */
    /*   Changes to this file may cause incorrect behavior      */
    /*   and will be lost if the code is regenerated.           */
    /************************************************************/
    
    package  cobiscorp.ecobis.servicecontractoperations.service;
    import   cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerRequest;
    import   cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse;
    import   cobiscorp.ecobis.datacontractoperations.dto.Message;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestCreateSavingAccount;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseCreateSavingAccount;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestEncriptData;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseEncriptData;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestOtp;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseOtp;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestCatalog;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseCatalog;
    import   cobiscorp.ecobis.datacontractoperations.dto.CatalogueItems;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestGetUserEntityInformation;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseGetUserEntityInformation;
    import   cobiscorp.ecobis.datacontractoperations.dto.RegisterBeneficiaryRequest;
    import   cobiscorp.ecobis.datacontractoperations.dto.RegisterBeneficiaryResponse;
    import   cobiscorp.ecobis.datacontractoperations.dto.SearchZipCodeRequest;
    import   cobiscorp.ecobis.datacontractoperations.dto.SearchZipCodeResponse;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestUpdateProfile;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateProfile;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestValidateCustomerIdentityCard;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard;
    import   cobiscorp.ecobis.datacontractoperations.dto.RequestValidateIdentity;
    import   cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity;
    
    import com.cobiscorp.cobis.cts.rest.client.api.exception.CTSRestException;
    import java.util.List;

    public interface IServiceContractOperationsApiService{
    
          /**
          * Create new customers
          */
        
			//Have DTO
			public CreateCustomerResponse createCustomer(CreateCustomerRequest inCreateCustomerRequest  )throws CTSRestException;
          /**
          * Service to create a savings account for an existing customer
          */
        
			//Have DTO
			public ResponseCreateSavingAccount createSavingAccount(RequestCreateSavingAccount inRequestCreateSavingAccount  )throws CTSRestException;
          /**
          * Encrypt Data
          */
        
			// Return list
			public  List<ResponseEncriptData>  encryptData(RequestEncriptData inRequestEncriptData  )throws CTSRestException;
          /**
          * Service to generate and send an OTP to the client
          */
        
			// Have only one return single result
			public  ResponseOtp generateTransactionFactor(RequestOtp inRequestOtp  )throws CTSRestException;
          /**
          * Get catalog
          */
        
			//Have DTO
			public ResponseCatalog getCatalog(RequestCatalog inRequestCatalog  )throws CTSRestException;
          /**
          * View Customer Information
          */
        
			//Have DTO
			public ResponseGetUserEntityInformation getUserEntityInformation(RequestGetUserEntityInformation inRequestGetUserEntityInformation  )throws CTSRestException;
          /**
          * Register Beneficiary Saving Account
          */
        
			//Have DTO
			public RegisterBeneficiaryResponse registerBeneficiary(RegisterBeneficiaryRequest inRegisterBeneficiaryRequest  )throws CTSRestException;
            /**
          * Search Zip Code API
          */
        
			// Return DTO
			public SearchZipCodeResponse  searchZipCode(SearchZipCodeRequest inSearchZipCodeRequest  )throws CTSRestException;
          /**
          * Service to Update Profile
          */
        
			// Return list
			public  List<ResponseUpdateProfile>  updateProfile(RequestUpdateProfile inRequestUpdateProfile  )throws CTSRestException;
			//Have DTO
			public ResponseValidateCustomerIdentityCard validateCustomerIdentityCard(RequestValidateCustomerIdentityCard inRequestValidateCustomerIdentityCard  )throws CTSRestException;
          /**
          * Validate Identity
          */
        
			//Have DTO
			public ResponseValidateIdentity validateIdentity(RequestValidateIdentity inRequestValidateIdentity  )throws CTSRestException;
    }

  