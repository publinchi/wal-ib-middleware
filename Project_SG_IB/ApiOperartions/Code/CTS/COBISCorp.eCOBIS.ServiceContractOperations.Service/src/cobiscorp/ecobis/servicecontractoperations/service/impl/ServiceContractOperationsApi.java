
/************************************************************/
/*                     IMPORTANTE                           */
/*   Esta aplicacion es parte de los  paquetes bancarios    */
/*   propiedad de COBISCORP.                                */
/*   Su uso no autorizado queda  expresamente  prohibido    */
/*   asi como cualquier alteracion o agregado hecho  por    */
/*   alguno de sus usuarios sin el debido consentimiento    */
/*   por escrito de COBISCORP.                              */
/*   Este programa esta protegido por la ley de derechos    */
/*   de autor y por las y por las convenciones              */
/*   internacionales de  propiedad intelectual. Su uso no   */
/*   autorizado dara  derecho a  COBISCORP para obtener     */
/*   ordenes de  secuestro o retencion y  para perseguir    */
/*   penalmente a los autores de cualquier infraccion.      */
/************************************************************/
/*   This code was generated by CEN-SG.                     */
/*   Changes to this file may cause incorrect behavior      */
/*   and will be lost if the code is regenerated.           */
/************************************************************/

package  cobiscorp.ecobis.servicecontractoperations.service.impl;

import cobiscorp.ecobis.commons.dto.ServiceRequestTO;
import cobiscorp.ecobis.commons.dto.ServiceResponseTO;
import com.cobiscorp.cobis.cts.domains.ICTSTypes;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.*;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.CTSInputParam.IOType;
import com.cobiscorp.cobis.cts.sdf.service.CTSAbstractService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSServiceInterceptors;
import cobiscorp.ecobis.servicecontractoperations.service.IServiceContractOperationsApi;

@CTSService
public class ServiceContractOperationsApi extends CTSAbstractService implements IServiceContractOperationsApi {

	@CTSProcedure(
		name = "cobis..sp_activate_device_api", dbms = "SQLCANALES",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestDeviceActivation",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "phoneNumber", param = "@i_phone_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "aliasDevice", param = "@i_alias_device", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500116")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseDeviceActivation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDeviceActivation.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseDeviceActivation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDeviceActivation.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO activateDevice(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_affiliate_customer", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAffiliateCustomer",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500101")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAffiliateCustomer",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAffiliateCustomer.class,
      columns = {
		    @CTSColumn(field = "loginId", columnIndex = 1),
		    @CTSColumn(field = "userCreated", columnIndex = 2),
		    @CTSColumn(field = "success", columnIndex = 3),
		    @CTSColumn(field = "response.message", columnIndex = 4),
		    @CTSColumn(field = "response.code", columnIndex = 5)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO affiliateCustomer(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_auth_deposit_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAuthorizeDeposit",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "uuid", param = "@i_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "orderId", param = "@i_order_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transmissionDateTimeGmt", param = "@i_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "date", param = "@i_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "time", param = "@i_time", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "mti", param = "@i_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_processing_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nsu", param = "@i_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "merchantCategoryCode", param = "@i_merchant_category_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_source_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_settlement_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_amount", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "institutionName", param = "@i_institution_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminalCode", param = "@i_terminal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "retrievalReferenceNumber", param = "@i_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "acquirerCountryCode", param = "@i_acquirer_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "storeNumber", param = "@i_store_number", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "afiliacionNumber", param = "@i_affiliation_number", dataType = ICTSTypes.SQLDECIMAL)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500134")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAuthorizeDeposit",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeDeposit.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseAuthorizeDeposit",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeDeposit.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO authorizeDeposit(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_auth_purchase_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAuthorizePurchase",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "uuid", param = "@i_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transmissionDateTimeGmt", param = "@i_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "date", param = "@i_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "time", param = "@i_time", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "mti", param = "@i_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_processing_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nsu", param = "@i_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cardExpirationDate", param = "@i_card_expiration_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cardEntry", param = "@i_card_entry_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cardEntry", param = "@i_pin", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cardEntry", param = "@i_mode", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "merchantCategoryCode", param = "@i_merchant_category_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values", param = "@i_source_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values", param = "@i_settlement_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values", param = "@i_amount", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "institutionName", param = "@i_institution_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminalCode", param = "@i_terminal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "retrievalReferenceNumber", param = "@i_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "acquirerCountryCode", param = "@i_acquirer_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transactionIndicators", param = "@i_card_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transactionIndicators", param = "@i_card_holder_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transactionIndicators", param = "@i_cvv2_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transactionIndicators", param = "@i_pin_validated_offline", dataType = ICTSTypes.SQLBIT)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500132")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAuthorizePurchase",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizePurchase.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseAuthorizePurchase",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizePurchase.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO authorizePurchase(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_auth_purchase_dock_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAuthorizePurchaseDock",
				input = {
				
					@CTSInputParam(field = "account_id", param = "@i_account_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "account_type_indicator", param = "@i_account_type_indicator", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "acquirer_country_code", param = "@i_acquirer_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "authorization_code", param = "@i_authorization_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "bank_account_number", param = "@i_bank_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "bank_branch_number", param = "@i_bank_branch_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "brand_response_code", param = "@i_brand_response_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "card_expiration_date", param = "@i_card_expiration_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction_indicators.cardholder_present", param = "@i_card_holder_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "card_id", param = "@i_card_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "card_number", param = "@i_card_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction_indicators.card_present", param = "@i_card_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "card_entry.code", param = "@i_crd_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "card_entry.pin", param = "@i_crd_mode", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "card_entry.pin", param = "@i_crd_pin", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "establishment", param = "@i_establishment", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "establishment_code", param = "@i_establishment_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "funds_transfer.type", param = "@i_funds_transfer_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "installment_type", param = "@i_installment_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "installments", param = "@i_installments", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "merchant_category_code", param = "@i_merchant_category_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "mti", param = "@i_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nsu", param = "@i_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing.code", param = "@i_p_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing.destiny_account_type", param = "@i_p_destiny_account_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing.origin_account_type", param = "@i_p_origin_account_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing.type", param = "@i_p_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "person_id", param = "@i_person_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "pos_postal_code", param = "@i_pos_postal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "preauthorization.initial_transaction_uuid", param = "@i_pre_initial_transaction_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "preauthorization.life_cycle", param = "@i_pre_life_cycle", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "preauthorization.type", param = "@i_pre_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "product_id", param = "@i_product_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "product_status", param = "@i_product_status", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "retrieval_reference_number", param = "@i_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminal_code", param = "@i_terminal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminal_date", param = "@i_terminal_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminal_time", param = "@i_terminal_time", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "token_data.expiration_date", param = "@i_tk_expiration_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "token_data.requestor_id_token", param = "@i_tk_requestor_id_token", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "token_data.status", param = "@i_tk_status", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "token_data.token", param = "@i_tk_token", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction_origin", param = "@i_transaction_origin", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transmission_date_time_gmt", param = "@i_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction_indicators.allows_partial_approval", param = "@i_trn_allows_partial_approval", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.card_present", param = "@i_trn_card_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.cardholder_present", param = "@i_trn_cardholder_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.cvv1_present", param = "@i_trn_cvv1_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.cvv2_present", param = "@i_trn_cvv2_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.cvv3_present", param = "@i_trn_cvv3_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_3ds_present", param = "@i_trn_is_3ds_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_3ds_valid", param = "@i_trn_is_3ds_valid", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_automated_fuel_dispenser", param = "@i_trn_is_automated_fuel_disp", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_crossborder", param = "@i_trn_is_crossborder", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_dcc", param = "@i_trn_is_dcc", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_funds_transfer", param = "@i_trn_is_funds_transfer", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.is_international", param = "@i_trn_is_international", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.only_supports_purchase", param = "@i_trn_only_supports_purchase", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.partially_reversed", param = "@i_trn_partially_reversed", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.password_present", param = "@i_trn_password_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.pin_validated_offline", param = "@i_trn_pin_validated_offline", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.preauthorization", param = "@i_trn_preauthorization", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.recurring", param = "@i_trn_recurring", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "transaction_indicators.token_present", param = "@i_trn_token_present", dataType = ICTSTypes.SQLBIT),
					@CTSInputParam(field = "values.billing_conversion_rate", param = "@i_val_billing_conversion_rate", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.billing_currency_code", param = "@i_val_billing_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.billing_value", param = "@i_val_billing_value", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.cash_back_value", param = "@i_val_cash_back_value", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.credit_line_usage_fee", param = "@i_val_credit_line_usage_fee", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.settlement_currency_code", param = "@i_val_settlement_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.settlement_value", param = "@i_val_settlement_value", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "values.source_currency_code", param = "@i_val_source_currency_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500138")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAuthorizePurchaseDock",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizePurchaseDock.class,
      columns = {
		    @CTSColumn(field = "approved_value", columnIndex = 1),
		    @CTSColumn(field = "settlement_value", columnIndex = 2),
		    @CTSColumn(field = "cardholder_billing_value", columnIndex = 3),
		    @CTSColumn(field = "reason", columnIndex = 4),
		    @CTSColumn(field = "available_limit", columnIndex = 5)
      }
    ),
    @CTSResponse(
      name = "returnResponseAuthorizePurchaseDock",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizePurchaseDock.class,
      columns = {
		    @CTSColumn(field = "response", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO authorizePurchaseDock(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
	  
	@CTSProcedure(
		name = "cob_procesador..sp_auth_reversal_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAuthorizeReversal",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "uuid", param = "@i_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "orderId", param = "@i_order_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transmissionDateTimeGmt", param = "@i_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "date", param = "@i_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "time", param = "@i_time", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "mti", param = "@i_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_processing_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nsu", param = "@i_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "merchantCategoryCode", param = "@i_merchant_category_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_source_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_settlement_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_amount", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminalCode", param = "@i_terminal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "retrievalReferenceNumber", param = "@i_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "acquirerCountryCode", param = "@i_acquirer_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "storeNumber", param = "@i_store_number", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "afiliacionNumber", param = "@i_affiliation_number", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "establishment", param = "@i_establishment", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "adviceReason", param = "@i_advise_reason", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "adviceReasonCode", param = "@i_advise_reason_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_institution_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originalTransactionData", param = "@i_origin_processing_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500135")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAuthorizeReversal",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeReversal.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseAuthorizeReversal",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeReversal.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO authorizeReversal(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_auth_withdrawal_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAuthorizeWithdrawal",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "uuid", param = "@i_uuid", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "orderId", param = "@i_order_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transmissionDateTimeGmt", param = "@i_transmission_date_time_gtm", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "date", param = "@i_date", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "time", param = "@i_time", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "mti", param = "@i_mti", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "processing", param = "@i_processing_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nsu", param = "@i_nsu", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "merchantCategoryCode", param = "@i_merchant_category_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_source_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_settlement_currency_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "transaction", param = "@i_amount", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "institutionName", param = "@i_institution_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "terminalCode", param = "@i_terminal_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "retrievalReferenceNumber", param = "@i_retrieval_reference_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "acquirerCountryCode", param = "@i_acquirer_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "storeNumber", param = "@i_store_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "afiliationNumber", param = "@i_affiliation_number", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500133")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseAuthorizeWithdrawal",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeWithdrawal.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseAuthorizeWithdrawal",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseAuthorizeWithdrawal.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO authorizeWithdrawal(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_api_create_customer",   
		objectRequest = {
		
			@CTSRequest(
				name = "inCreateCustomerRequest",
				input = {
				
					@CTSInputParam(field = "activity", param = "@i_activity_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "referenceAddress", param = "@i_address", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "addressTypeCode", param = "@i_address_type_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amountTransaction", param = "@i_amount_transaction", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "averageBalance", param = "@i_average_balance", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "birthDate", param = "@i_birthdate", dataType = ICTSTypes.SQLDATETIME),
					@CTSInputParam(field = "city", param = "@i_city_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "civilStatus", param = "@i_civil_status", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "companyName", param = "@i_company_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "countryBirth", param = "@i_countrybirth_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "economicSector", param = "@i_economic_sector", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "electronicTransfer", param = "@i_electronic_transfer", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "externalNumber", param = "@i_externalnumber", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "gender", param = "@i_gender_code", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "geolocalizationLatitude", param = "@i_geolocatization_latitude", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "geolocalizationLongitude", param = "@i_geolocatization_longitude", dataType = ICTSTypes.SQLDECIMAL),
					@CTSInputParam(field = "idNumber", param = "@i_identification_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identityValidated", param = "@i_identity_validated", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "incomeLevel", param = "@i_incomelevel", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "incomeLevelEntity", param = "@i_incomelevel_entity", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "internalNumber", param = "@i_internalnumber", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "lastName", param = "@i_lastname", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "legalIncomeSource", param = "@i_legalincomesource", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "email", param = "@i_mail", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "firstName", param = "@i_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "nationality", param = "@i_nationality", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "noConnectionIllegalNetworks", param = "@i_noconnectiontoillegalnetworks", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "phoneNumber", param = "@i_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "numberTransaction", param = "@i_number_transaction", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "occupation", param = "@i_occupation_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "operationType", param = "@i_operation_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "otherMexicanAccount", param = "@i_other_mexican_account", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "secondLastName", param = "@i_otherlastname", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "secondName", param = "@i_othername", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "paymentCard", param = "@i_payment_card", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "paymentRecharge", param = "@i_payment_recharge", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "servicesPay", param = "@i_payment_service", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "propertyTypeCode", param = "@i_propertytype_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "province", param = "@i_province_code", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "provinceBirth", param = "@i_provincebirth_code", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "provisionCash", param = "@i_provision_cash", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "rfc", param = "@i_rfc", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identificationNumber", param = "@i_secondaryidentification_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "identificationType", param = "@i_secondaryidentification_type_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "street", param = "@i_street", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "subdivisioncode", param = "@i_subdivision_code", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "timeCurrentReside", param = "@i_timeincurrentresidence", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "townCode", param = "@i_town_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "validityDate", param = "@i_validity_date", dataType = ICTSTypes.SQLDATETIME),
					@CTSInputParam(field = "zipcode", param = "@i_zipcode_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500094")
		},
  response = {
  
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnCreateCustomerResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreateCustomerResponse.class,
      columns = {
		    @CTSColumn(field = "externalCustomerId", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO createCustomer(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_apertura_aut_bv_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestCreateSavingAccount",
				input = {
				
					@CTSInputParam(field = "customerId", param = "@i_customer", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500097"),
				@CTSDefaultInputParam(value = "XXXX", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "00000", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "00000", param = "@o_account", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		}
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO createSavingAccount(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_credit_operation_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inCreditAccountRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amount", param = "@i_amount", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "commission", param = "@i_commission", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "latitude", param = "@i_latitude", dataType = ICTSTypes.SQLFLT8i),
					@CTSInputParam(field = "longitude", param = "@i_longitude", dataType = ICTSTypes.SQLFLT8i),
					@CTSInputParam(field = "referenceNumber", param = "@i_referenceNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "creditConcept", param = "@i_creditConcept", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originCode", param = "@i_originCode", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500111")
		},
  response = {
  
    @CTSResponse(
      name = "returnCreditAccountResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CreditAccountResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3),
		    @CTSColumn(field = "referenceCode", columnIndex = 4)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO creditOperation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_card_application_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inCardApplicationRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "street", param = "@i_street", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "complement", param = "@i_complement", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "number", param = "@i_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "city", param = "@i_city", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "administrativeAreaCode", param = "@i_administrative_area_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "countryCode", param = "@i_country_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "postalCode", param = "@i_postal_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500112")
		},
  response = {
  
    @CTSResponse(
      name = "returnCardApplicationResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.CardApplicationResponse.class,
      singleResult = true,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3),
		    @CTSColumn(field = "cardId", columnIndex = 4),
		    @CTSColumn(field = "personId", columnIndex = 5),
		    @CTSColumn(field = "accountId", columnIndex = 6),
		    @CTSColumn(field = "assignmentDate", columnIndex = 7)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO customerCardApplication(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_debit_operation_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inDebitAccountRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amount", param = "@i_amount", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "commission", param = "@i_commission", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "latitude", param = "@i_latitude", dataType = ICTSTypes.SQLFLT8i),
					@CTSInputParam(field = "longitude", param = "@i_longitude", dataType = ICTSTypes.SQLFLT8i),
					@CTSInputParam(field = "referenceNumber", param = "@i_referenceNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "debitConcept", param = "@i_debitConcept", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originCode", param = "@i_originCode", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500118")
		},
  response = {
  
    @CTSResponse(
      name = "returnDebitAccountResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.DebitAccountResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3),
		    @CTSColumn(field = "referenceCode", columnIndex = 4)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO debitOperation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_define_security_qa_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestDefineSecurityQA",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "cstmrAnswer1.questionId", param = "@i_question_1_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrAnswer1.responseId", param = "@i_answer_1_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrAnswer2.questionId", param = "@i_question_2_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrAnswer2.responseId", param = "@i_answer_2_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrAnswer3.questionDescription", param = "@i_question_desc", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrAnswer3.responseDescription", param = "@i_answer_desc", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500123")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseDefineSecurityQA",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDefineSecurityQA.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseDefineSecurityQA",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDefineSecurityQA.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseDefineSecurityQA",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDefineSecurityQA.class,
      columns = {
		    @CTSColumn(field = "customQuestionId", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO defineSecurityQA(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_bvirtual..sp_beneficiaries_mant_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestDeleteBeneficiary",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "beneficiaryId", param = "@i_benf_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500127"),
				@CTSDefaultInputParam(value = "D", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseDeleteBeneficiary",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDeleteBeneficiary.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseDeleteBeneficiary",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseDeleteBeneficiary.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO deleteBeneficiary(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_encryptData", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestEncriptData",
				input = {
				
					@CTSInputParam(field = "password", param = "@i_password", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500088")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseEncriptData",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseEncriptData.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "password", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3),
		    @CTSColumn(field = "response.code", columnIndex = 4)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO encryptData(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..administra_token", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestOtp",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500090")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseOtp",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOtp.class,
      singleResult = true,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO generateTransactionFactor(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_bvirtual..sp_get_all_quest_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestAllCustomerQuestions",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_customer", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500122"),
				@CTSDefaultInputParam(value = "0", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "1", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "X", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnCstmrQuestions",
      type = cobiscorp.ecobis.datacontractoperations.dto.CstmrQuestions.class,
      columns = {
		    @CTSColumn(field = "id", columnIndex = 1),
		    @CTSColumn(field = "description", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnCstmrAnswers",
      type = cobiscorp.ecobis.datacontractoperations.dto.CstmrAnswers.class,
      columns = {
		    @CTSColumn(field = "questionId", columnIndex = 1),
		    @CTSColumn(field = "responseId", columnIndex = 2),
		    @CTSColumn(field = "description", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getAllCustomerQuestions(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_get_balances_detail_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetBalancesDetail",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500102")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseGetBalancesDetail",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetBalancesDetail.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3),
		    @CTSColumn(field = "accountName", columnIndex = 4),
		    @CTSColumn(field = "accountStatus", columnIndex = 5),
		    @CTSColumn(field = "availableBalance", columnIndex = 6),
		    @CTSColumn(field = "averageBalance", columnIndex = 7),
		    @CTSColumn(field = "currencyId", columnIndex = 8),
		    @CTSColumn(field = "deliveryAddress", columnIndex = 9),
		    @CTSColumn(field = "freezingsNumber", columnIndex = 10),
		    @CTSColumn(field = "frozenAmount", columnIndex = 11),
		    @CTSColumn(field = "lastCutoffBalance", columnIndex = 12),
		    @CTSColumn(field = "lastOperationDate", columnIndex = 13),
		    @CTSColumn(field = "openingDate", columnIndex = 14),
		    @CTSColumn(field = "overdraftAmount", columnIndex = 15),
		    @CTSColumn(field = "productId", columnIndex = 16),
		    @CTSColumn(field = "toDrawBalance", columnIndex = 17),
		    @CTSColumn(field = "accountingBalance", columnIndex = 18),
		    @CTSColumn(field = "official", columnIndex = 19),
		    @CTSColumn(field = "clabeAccountNumber", columnIndex = 20),
		    @CTSColumn(field = "idDebitCard", columnIndex = 21),
		    @CTSColumn(field = "debitCardNumber", columnIndex = 22),
		    @CTSColumn(field = "stateDebitCard", columnIndex = 23)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getBalancesDetail(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_bvirtual..sp_beneficiaries_mant_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inGetBeneficiaryRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "account", param = "@i_numero_producto", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500099"),
				@CTSDefaultInputParam(value = "S", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnGetBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.GetBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "beneficiaries.id", columnIndex = 1),
		    @CTSColumn(field = "beneficiaries.names", columnIndex = 2),
		    @CTSColumn(field = "beneficiaries.lastName", columnIndex = 3),
		    @CTSColumn(field = "beneficiaries.secondLastName", columnIndex = 4),
		    @CTSColumn(field = "beneficiaries.birthDate", columnIndex = 5),
		    @CTSColumn(field = "beneficiaries.relationship", columnIndex = 6),
		    @CTSColumn(field = "beneficiaries.phoneNumber", columnIndex = 7),
		    @CTSColumn(field = "beneficiaries.zipcode", columnIndex = 8),
		    @CTSColumn(field = "beneficiaries.province", columnIndex = 9),
		    @CTSColumn(field = "beneficiaries.city", columnIndex = 10),
		    @CTSColumn(field = "beneficiaries.colony", columnIndex = 11),
		    @CTSColumn(field = "beneficiaries.location", columnIndex = 12),
		    @CTSColumn(field = "beneficiaries.address", columnIndex = 13),
		    @CTSColumn(field = "beneficiaries.percentage", columnIndex = 14)
      }
    ),
    @CTSResponse(
      name = "returnGetBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.GetBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnGetBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.GetBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getBeneficiary(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_get_catalog_data", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestCatalog",
				input = {
				
					@CTSInputParam(field = "catalogueTable", param = "@i_catalog", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500087")
		},
  response = {
  
    @CTSResponse(
      name = "returnCatalogueItems",
      type = cobiscorp.ecobis.datacontractoperations.dto.CatalogueItems.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "name", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.Response.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseCatalog",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseCatalog.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getCatalog(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_get_colony_by_mun_api_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetColonyByMunicipality",
				input = {
				
					@CTSInputParam(field = "zipCode", param = "@i_zip_code", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "municipality", param = "@i_city_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500108"),
				@CTSDefaultInputParam(value = "0", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "XXX", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "1", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnAddressTypeItems",
      type = cobiscorp.ecobis.datacontractoperations.dto.AddressTypeItems.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "value", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getColonyByMunicipality(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_tr04_cons_mov_ah_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetMovementsDetail",
				input = {
				
					@CTSInputParam(field = "accountNumber", param = "@i_cta", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "minDate", param = "@i_fecha_ini", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "maxDate", param = "@i_fecha_fin", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "sequential", param = "@i_sec_unico", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "externalCustomerId", param = "@i_cliente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "numberOfMovements", param = "@i_nro_registros", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "movementId", param = "@i_mov_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500106"),
				@CTSDefaultInputParam(value = "T", param = "@i_tipo", dataType = ICTSTypes.SQLCHAR),
				@CTSDefaultInputParam(value = "8", param = "@i_servicio", dataType = ICTSTypes.SQLINT1),
				@CTSDefaultInputParam(value = "A", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseGetMovementsDetail",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetMovementsDetail.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseGetMovementsDetail",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetMovementsDetail.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseGetMovementsDetail",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetMovementsDetail.class,
      columns = {
		    @CTSColumn(field = "numberOfResults", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseGetMovementsDetail",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetMovementsDetail.class,
      columns = {
		    @CTSColumn(field = "accountStatementArray.accountingBalance", columnIndex = 1),
		    @CTSColumn(field = "accountStatementArray.alternateCode", columnIndex = 2),
		    @CTSColumn(field = "accountStatementArray.amount", columnIndex = 3),
		    @CTSColumn(field = "accountStatementArray.availableBalance", columnIndex = 4),
		    @CTSColumn(field = "accountStatementArray.concept", columnIndex = 5),
		    @CTSColumn(field = "accountStatementArray.description", columnIndex = 6),
		    @CTSColumn(field = "accountStatementArray.hour", columnIndex = 7),
		    @CTSColumn(field = "accountStatementArray.tracking", columnIndex = 8),
		    @CTSColumn(field = "accountStatementArray.operationType", columnIndex = 9),
		    @CTSColumn(field = "accountStatementArray.reference", columnIndex = 10),
		    @CTSColumn(field = "accountStatementArray.movementId", columnIndex = 11),
		    @CTSColumn(field = "accountStatementArray.signDC", columnIndex = 12),
		    @CTSColumn(field = "accountStatementArray.transactionDate", columnIndex = 13),
		    @CTSColumn(field = "accountStatementArray.uniqueSequential", columnIndex = 14),
		    @CTSColumn(field = "accountStatementArray.processDate", columnIndex = 15),
		    @CTSColumn(field = "accountStatementArray.tarjetNumber", columnIndex = 16),
		    @CTSColumn(field = "accountStatementArray.destinyAccount", columnIndex = 17),
		    @CTSColumn(field = "accountStatementArray.typeAccount", columnIndex = 18),
		    @CTSColumn(field = "accountStatementArray.beneficiary", columnIndex = 19),
		    @CTSColumn(field = "accountStatementArray.referenceNumber", columnIndex = 20),
		    @CTSColumn(field = "accountStatementArray.commission", columnIndex = 21),
		    @CTSColumn(field = "accountStatementArray.iva", columnIndex = 22)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getMovementsDetail(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_get_municipality_state_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestMunicipalityByState",
				input = {
				
					@CTSInputParam(field = "stateId", param = "@i_state_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "zipCode", param = "@i_zip_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500105"),
				@CTSDefaultInputParam(value = "XXX", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseMunicipalityByState",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseMunicipalityByState.class,
      columns = {
		    @CTSColumn(field = "municipalitiesItems[0].idMunicipality", columnIndex = 1),
		    @CTSColumn(field = "municipalitiesItems[0].municipality", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getMunicipalityByState(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_consulta_cuentas", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestOwnAccountsView",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_customer_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500103")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseOwnAccountsView",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOwnAccountsView.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseOwnAccountsView",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOwnAccountsView.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseOwnAccountsView",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOwnAccountsView.class,
      columns = {
		    @CTSColumn(field = "accountsArray[0].availableBalance", columnIndex = 1),
		    @CTSColumn(field = "accountsArray[0].drawBalance", columnIndex = 2),
		    @CTSColumn(field = "accountsArray[0].currencyId", columnIndex = 3),
		    @CTSColumn(field = "accountsArray[0].currencySymbol", columnIndex = 4),
		    @CTSColumn(field = "accountsArray[0].currencyName", columnIndex = 5),
		    @CTSColumn(field = "accountsArray[0].productAlias", columnIndex = 6),
		    @CTSColumn(field = "accountsArray[0].productId", columnIndex = 7),
		    @CTSColumn(field = "accountsArray[0].productNumber", columnIndex = 8),
		    @CTSColumn(field = "accountsArray[0].productName", columnIndex = 9),
		    @CTSColumn(field = "accountsArray[0].productAbbreviation", columnIndex = 10),
		    @CTSColumn(field = "accountsArray[0].accountingBalance", columnIndex = 11),
		    @CTSColumn(field = "accountsArray[0].expirationDate", columnIndex = 12),
		    @CTSColumn(field = "accountsArray[0].rate", columnIndex = 13),
		    @CTSColumn(field = "accountsArray[0].totalCredit", columnIndex = 14),
		    @CTSColumn(field = "accountsArray[0].clabeInterBank", columnIndex = 15)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getOwnAccountsView(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_getzip_codestate_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inStateByZipCodeRequest",
				input = {
				
					@CTSInputParam(field = "zipCode", param = "@i_zip_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500104"),
				@CTSDefaultInputParam(value = "XXX", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_id_state", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "XXX", param = "@o_desc_state", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		}
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getStateByZipCode(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_getCustomer",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetUserEntityInformation",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500092")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseGetUserEntityInformation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetUserEntityInformation.class,
      columns = {
		    @CTSColumn(field = "registrationDate", columnIndex = 1),
		    @CTSColumn(field = "modifyDate", columnIndex = 2),
		    @CTSColumn(field = "completeName", columnIndex = 3),
		    @CTSColumn(field = "entityType", columnIndex = 4),
		    @CTSColumn(field = "identityCard", columnIndex = 5),
		    @CTSColumn(field = "firstName", columnIndex = 6),
		    @CTSColumn(field = "secondName", columnIndex = 7),
		    @CTSColumn(field = "gender", columnIndex = 8),
		    @CTSColumn(field = "birthDate", columnIndex = 9),
		    @CTSColumn(field = "firstName", columnIndex = 10),
		    @CTSColumn(field = "secondName", columnIndex = 11),
		    @CTSColumn(field = "rFC", columnIndex = 12),
		    @CTSColumn(field = "mail", columnIndex = 13),
		    @CTSColumn(field = "phoneNumber", columnIndex = 14),
		    @CTSColumn(field = "customerLevel", columnIndex = 15),
		    @CTSColumn(field = "addressId", columnIndex = 16),
		    @CTSColumn(field = "success", columnIndex = 17),
		    @CTSColumn(field = "response.code", columnIndex = 18),
		    @CTSColumn(field = "response.message", columnIndex = 19)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getUserEntityInformation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_register_account_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestRegisterAccountSpei",
				input = {
				
					@CTSInputParam(field = "accountNumberDestination", param = "@i_cta_des", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "productAlias", param = "@i_product_alias", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "bankId", param = "@i_banco", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountNumber", param = "@i_cta", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "typeDestinationId", param = "@i_tipo_tercero", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500110"),
				@CTSDefaultInputParam(value = "I", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseRegisterAccountSpei",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseRegisterAccountSpei.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseRegisterAccountSpei",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseRegisterAccountSpei.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO registerAccount(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_bvirtual..sp_beneficiaries_mant_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRegisterBeneficiaryRequest",
				input = {
				
					@CTSInputParam(field = "beneficiaries.lastName", param = "@i_apellido_m", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.secondLastName", param = "@i_apellido_p", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.street", param = "@i_calle", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.city", param = "@i_ciudad", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "beneficiaries.zipcode", param = "@i_codpostal", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "beneficiaries.birthDate", param = "@i_fecha_nac", dataType = ICTSTypes.SQLDATETIME),
					@CTSInputParam(field = "beneficiaries.location", param = "@i_localidad", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.names", param = "@i_nombres", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.externalNumber", param = "@i_numero_externo", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.internalNumber", param = "@i_numero_interno", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "account", param = "@i_numero_producto", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.relationship", param = "@i_parentesco", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "beneficiaries.colony", param = "@i_parroquia", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "beneficiaries.percentage", param = "@i_porcentaje", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "beneficiaries.province", param = "@i_provincia", dataType = ICTSTypes.SQLINT2),
					@CTSInputParam(field = "beneficiaries.phoneNumber", param = "@i_telefono", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500096"),
				@CTSDefaultInputParam(value = "I", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnRegisterBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.RegisterBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnRegisterBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.RegisterBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnRegisterBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.RegisterBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "registeredBeneficiaries.id", columnIndex = 1),
		    @CTSColumn(field = "registeredBeneficiaries.names", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO registerBeneficiary(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_search_location_catalog_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestSearchLocationCatalog",
				input = {
				
					@CTSInputParam(field = "city", param = "@i_city_code", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500109"),
				@CTSDefaultInputParam(value = "0", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "0", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "X", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseSearchLocationCatalog_addressTypeItem",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseSearchLocationCatalog_addressTypeItem.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "value", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO searchLocationCatalog(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_search_zipcode", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inSearchZipCodeRequest",
				input = {
				
					@CTSInputParam(field = "zipCode", param = "@i_zipCode", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500098"),
				@CTSDefaultInputParam(value = "XXXX", param = "@o_success", dataType = ICTSTypes.SQLBIT, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "XXXX", param = "@o_message", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT),
				@CTSDefaultInputParam(value = "000", param = "@o_code", dataType = ICTSTypes.SQLINT4, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnListZipCode",
      type = cobiscorp.ecobis.datacontractoperations.dto.ListZipCode.class,
      columns = {
		    @CTSColumn(field = "codeColony", columnIndex = 1),
		    @CTSColumn(field = "cityCode", columnIndex = 2),
		    @CTSColumn(field = "provinceCode", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO searchZipCode(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_transfer_spei_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestTransferSpi",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "originAccountNumber", param = "@i_origin_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationAccountNumber", param = "@i_destination_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "originAccountAlias", param = "@i_origin_account_alias", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationAccountAlias", param = "@i_destination_account_alias", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationBeneficiaryName", param = "@i_destination_beneficiary_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amount", param = "@i_amount", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "description", param = "@i_description", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "bankId", param = "@i_bank_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "bankName", param = "@i_bank_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationAccountOwnerName", param = "@i_destination_account_owner_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationTypeAccount", param = "@i_destination_type_account", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "ownerName", param = "@i_owner_name", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "detail", param = "@i_detail", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "commission", param = "@i_commission", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "latitude", param = "@i_latitude", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "longitude", param = "@i_longitude", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "originAccountNumber", param = "@i_reference_number", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500115")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseTransferSpi",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferSpi.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseTransferSpi",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferSpi.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseTransferSpi",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferSpi.class,
      columns = {
		    @CTSColumn(field = "referenceCode", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseTransferSpi",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferSpi.class,
      columns = {
		    @CTSColumn(field = "trackingKey", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO transferSpei(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_transf_third_account_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestTransferThirdPartyAccount",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "originAccountNumber", param = "@i_cta", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "destinationNumber", param = "@i_cta_des", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "amount", param = "@i_val", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "description", param = "@i_concepto", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "commission", param = "@i_comision", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "latitude", param = "@i_latitud", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "longitude", param = "@i_longitud", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "detail", param = "@i_detalle", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500114")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseTransferThirdPartyAccount",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferThirdPartyAccount.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseTransferThirdPartyAccount",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferThirdPartyAccount.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseTransferThirdPartyAccount",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseTransferThirdPartyAccount.class,
      columns = {
		    @CTSColumn(field = "referenceCode", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO transferThirdPartyAccount(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_bvirtual..sp_beneficiaries_mant_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inUpdateBeneficiaryRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "account", param = "@i_numero_producto", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500126"),
				@CTSDefaultInputParam(value = "U", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnUpdateBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.UpdateBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnUpdateBeneficiaryResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.UpdateBeneficiaryResponse.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateAccountBeneficiary(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_get_account_status_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestUpdateAccountStatus",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "accountStatus", param = "@i_accountStatus", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_accountNumber", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "blockingValue", param = "@i_blockingValue", dataType = ICTSTypes.SQLMONEY),
					@CTSInputParam(field = "period", param = "@i_period", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500131")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseUpdateAccountStatus",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateAccountStatus.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateAccountStatus(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_card_status_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestUpdateCardStatus",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "cardStatus", param = "@i_card_status", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "statusReason", param = "@i_status_reason", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "accountNumber", param = "@i_account_number", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "typeCard", param = "@i_type_card", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500130")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseUpdateCardStatus",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateCardStatus.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseUpdateCardStatus",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateCardStatus.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateCardStatus(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_updateCredentials", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestUpdateCredentials",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "userName", param = "@i_userName", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "password", param = "@i_password", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "oldPassword", param = "@i_oldPassword", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500125")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseUpdateCredentials",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateCredentials.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateCredentials(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_direccion_dml_api",   
		objectRequest = {
		
			@CTSRequest(
				name = "inUpdateCustomerAddressRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_ente", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "referenceAddress", param = "@i_descripcion", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "addressTypeCode", param = "@i_tipo", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "townCode", param = "@i_parroquia", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "city", param = "@i_ciudad", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "province", param = "@i_provincia", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "propertyTypeCode", param = "@i_tipo_prop", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "zipcode", param = "@i_codpostal", dataType = ICTSTypes.SQLCHAR),
					@CTSInputParam(field = "street", param = "@i_calle", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "timeCurrentReside", param = "@i_tiempo_reside", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "externalNumber", param = "@i_nro", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "internalNumber", param = "@i_nro_interno", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "subdivisioncode", param = "@i_localidad", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500100"),
				@CTSDefaultInputParam(value = "U", param = "@i_operacion", dataType = ICTSTypes.SQLCHAR),
				@CTSDefaultInputParam(value = "1", param = "@i_oficina", dataType = ICTSTypes.SQLINT2),
				@CTSDefaultInputParam(value = "S", param = "@i_direct", dataType = ICTSTypes.SQLVARCHAR)
		},
  response = {
  
    @CTSResponse(
      name = "returnUpdateCustomerAddressResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.UpdateCustomerAddressResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnUpdateCustomerAddressResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.UpdateCustomerAddressResponse.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateCustomerAddress(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_updateProfile", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestUpdateProfile",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "email", param = "@i_email", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "phoneNumber", param = "@i_phoneNumber", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500095")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseUpdateProfile",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseUpdateProfile.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2),
		    @CTSColumn(field = "response.code", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO updateProfile(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_val_all_security_qa_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateAllSecurityQA",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "cstmrVal1.questionId", param = "@i_question_1_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrVal1.responseId", param = "@i_answer_1_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrVal2.questionId", param = "@i_question_2_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrVal2.responseId", param = "@i_answer_2_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrVal3.customQuestionId", param = "@i_question_3_id", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "cstmrVal3.responseDescription", param = "@i_answer_3_id", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500124")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateAllSecurityQA",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateAllSecurityQA.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateAllSecurityQA",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateAllSecurityQA.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateAllSecurityQA(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_validate_identity_card_api", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateCustomerIdentityCard",
				input = {
				
					@CTSInputParam(field = "identityCard", param = "@curp", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500093")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      singleResult = true,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateCustomerIdentityCard",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateCustomerIdentityCard.class,
      columns = {
		    @CTSColumn(field = "externalCustomerId", columnIndex = 1)
      }
    )
  }
  
	)
	
      public ServiceResponseTO validateCustomerIdentityCard(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cobis..sp_val_device_activation_api", dbms = "SQLCANALES",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateDeviceActivation",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "phoneNumber", param = "@i_phone_number", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500117")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateDeviceActivation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateDeviceActivation.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateDeviceActivation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateDeviceActivation.class,
      columns = {
		    @CTSColumn(field = "response.code", columnIndex = 1),
		    @CTSColumn(field = "response.message", columnIndex = 2)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateDeviceActivation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_validate_identity", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestValidateIdentity",
				input = {
				
					@CTSInputParam(field = "type", param = "@i_type", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageAnverso", param = "@i_imageAnverso", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageReverso", param = "@i_imageReverso", dataType = ICTSTypes.SQLVARCHAR),
					@CTSInputParam(field = "imageDomicile", param = "@i_imageDomicile", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500091"),
				@CTSDefaultInputParam(value = "0", param = "@salida", dataType = ICTSTypes.SQLVARCHAR, ioType = CTSDefaultInputParam.IOType.INPUT_OUTPUT)
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.Response.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "verificationNumber", columnIndex = 1)
      }
    ),
    @CTSResponse(
      name = "returnResponseValidateIdentity",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseValidateIdentity.class,
      columns = {
		    @CTSColumn(field = "eventName", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateIdentity(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_validate_otp", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inValidateTokenRequest",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "token", param = "@i_token", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500120")
		},
  response = {
  
    @CTSResponse(
      name = "returnValidateTokenResponse",
      type = cobiscorp.ecobis.datacontractoperations.dto.ValidateTokenResponse.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "response.code", columnIndex = 2),
		    @CTSColumn(field = "response.message", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateTransactionFactor(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
}
