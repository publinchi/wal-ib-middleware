---
openapi: 3.0.0
info:
  title: Walmart API
  description: Walmart API Definition
  version: 1.0.0
servers:
- url: http://13.52.129.211:8080/CWCREST/services/resources/cobis/api/Walmart/ServiceContractOperations/
  description: Base URL
tags:
- name: Get Catalog
  description: This Service is used for get data catalogs
- name: Generate and send OTP
  description: Service to generate and send an OTP to the client.
- name: Encrypt Data
  description: Service to encrypt Data Client
- name: Validate Identity
  description: Service to initiate the validation of a client's identity document. Interface with META provider
- name: Create Customer API
  description: This Service is used for Create Customer's  
- name: getUserEntityInformation
  description: Service to consult general information of an existing client.  
paths:
  apiOperations/common/getCatalog:
    post:
      tags:
      - Get Catalog
      summary: Get catalog
      operationId: getCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCatalog'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Get data catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCatalog'
      security:
      - bearerAuth: []
  apiOperations/password/generateTransactionFactor:
    post:
      tags:
      - Generate and send OTP
      summary: Service to generate and send an OTP to the client
      operationId: generateTransactionFactor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOtp'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Get OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOtp'
      security:
      - bearerAuth: []
  apiOperations/security/encryptData:
    post:
      tags:
      - Encrypt Data
      summary: Encrypt Data
      operationId: encryptData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEncriptData'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response EncryptData
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEncriptData'
      security:
      - bearerAuth: []
  apiOperations/apiOperations/onbording/sendImagesToMati:
    post:
      tags:
        - Validate Identity
      summary: Validate Identity
      operationId: validateIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestValidateIdentity'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Validate identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseValidateIdentity'
      security:
        - bearerAuth: []
  apiOperations/apiOperations/customer/createCustomer:
    post:
      tags:
      - Create Customer API
      summary: Create new customers
      operationId: createCustomer
      requestBody:
        description: Request Create Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response Create Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
      security:
      - bearerAuth: []        
  apiOperations/enrollment/getUserEntityInformation:
    post:
      tags:
      - getUserEntityInformation
      summary: View Customer Information
      operationId: getUserEntityInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetUserEntityInformation'
        required: true
      responses:
        "400":
          description: The data sent is incorrect or corrupted
        "500":
          description: An error occurred on the server
        "401":
          description: Unauthorized service
        "403":
          description: The request has been denied.
        "200":
          description: Response getUserEntityInformation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseGetUserEntityInformation'
      security:
      - bearerAuth: []      
components:
  schemas:
    Message:
      type: object
      properties:
        code:
          maxLength: 10
          type: integer
          description: Result Code
          example: 0
        message:
          maxLength: 500
          type: string
          description: Result Mesagge Code
          example: success
    CatalogueItems:
      type: object
      properties:
        code:
          type: string
          description: id catalog
          example: "5"
        name:
          type: string
          description: catalog value
          example: 5 ó mas
    RequestCatalog:
      properties:
        catalogueTable:
          maxLength: 20
          minLength: 1
          type: string
          description: Catalog  Name
          example: cl_referencia_tiempo
    ResponseCatalog:
      type: object
      properties:
        catalogueItems:
          type: array
          description: Catalogo de items
          items:
            $ref: '#/components/schemas/CatalogueItems'
        success:
          type: boolean
          description: message result process
          example: true
        message:
          $ref: '#/components/schemas/Message'
    RequestOtp:
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
    ResponseOtp:
      properties:
        success:
          type: boolean
          description: result process
          example: true
        message:
          $ref: '#/components/schemas/Message'
    RequestEncriptData:
      type: object
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
        password:
          maxLength: 200
          type: string
          description: Phrase or password to be encrypted
          example: 44ssw0rd*
    ResponseEncriptData:
      type: object
      properties:
        success:
          maxLength: 1
          type: boolean
          description: Indicates whether the service was executed
          example: true
        password:
          maxLength: 200
          type: string
          description: Phrase or password encrypted
          example: gs7VonfE7UZukby0Yglx…
        message:
          $ref: '#/components/schemas/Message'      
    RequestValidateIdentity:
      properties:
        type:
          maxLength: 3
          minLength: 1
          type: string
          description: Type identity, like (INE, PAS, ,MIG)
          example: INE
        imageAnverso:
          type: string
          description: Base64 image of the front of the identity document
          example: /9j/4AAQM98ASkZJRgABAQANJM98AUDAQSkZJa9wJCAFW8I....
        imageReverso:
          type: string
          description: Base64 image of the back of the identity document
          example: /QAN9j/4AAQSkZJRgABAQANJM98AQSkZJAUDa9wJCAFW8I....
        imageDomicile:
          type: string
          description: Base64 image of proof of
          example: /JCAF9j/4AAQSkZJRgABAQSkZJAQANJM98AUDa9wJCAFW8I....
    ResponseValidateIdentity:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates whether the service was executed
          example: true
        numeroVerficacion:
          maxLength: 50
          type: string
          description: Process date
          example: Verification number of META/MATI
        nombreEvento:
          maxLength: 50
          type: string
          description: Name META/MATI event
          example: verification_completed
        message:
          $ref: '#/components/schemas/Message'    
    CreateCustomerRequest:
        properties:
          firtname:
            type: string
            description:  firts name customer
            example: Jose
            minLength: 1
            maxLength: 20
          secondName:
            type: string
            description:  second name customer
            minLength: 1
            maxLength: 20
            example: Carlos  
          lastName:
            type: string
            description:  last name customer
            minLength: 1
            maxLength: 20
            example: Olmos
          secondLastName:
            type: string
            description:  second last name customer
            minLength: 1
            maxLength: 20
            example: Solis
          gender:
            type: string
            description: M for male and F for female
            minLength: 1
            maxLength: 1
            example: M
          birthDate:
            type: string
            description: Birthdate (yyyy-MM-dd)
            example: 1986-10-01 
            format: date
            minLength: 10
            maxLength: 10
          nationality:
            type: string
            description:  Client nationality (Use the "getCatalog" service with table cl_pais)
            minLength: 1
            maxLength: 5
            example: 484
          proviceBirth:
            type: string
            description:  Type of occupation performed (Use the "getCatalog" service with table cl_provincia)
            minLength: 1
            maxLength: 5
            example: 9  
          civilStatus:
            type: string
            description: Civil status (Use the "getCatalog" service with table cl_ecivil)
            minLength: 1
            maxLength: 5
            example: CA
          idNumber:
            type: string
            description: Id number (CURP)
            minLength: 1
            maxLength: 18
            example: 'OOSC861001HMCLLR05'
          idType:
            type: string
            description: Id type
            minLength: 1
            maxLength: 5
            example: CURP
          rfc:
            type: string
            description: RFC number
            minLength: 1
            maxLength: 30
            example: 'BAVC700223U18'
          identificationType:
            type: string
            description:  Type identity
            minLength: 1
            maxLength: 10
            example: INE
          identificationNumber:
            type: string
            description: Id number identification, for example 54544565245674
            minLength: 1
            maxLength: 40
            example: 54544565245674
          activity:
            type: string
            description:  Type of activity do you? (Use the "getCatalog" service with table cl_actividad_ec)
            minLength: 1
            maxLength: 10
            example: 90001
          companyName:
            type: string
            description:  Name of the client's work company
            minLength: 1
            maxLength: 15
            example: My company
          operationType:
            type: string
            description:  Type of activity do you? (Use the "getCatalog" service with table )
            minLength: 1
            maxLength: 10
            example: 2
          incomeLevelEntity:
            type: string
            description:  Customer's primary revenue city ID  (Use the "getCatalog" service with table cl_provincia)
            minLength: 1
            maxLength: 10
            example: 9
          legalIncomeSource:
            type: string
            description:  Indicates whether the customer's revenue comes from a legal source(S or N)
            minLength: 1
            maxLength: 1
            example: S
          noConnectionIllegalNetworks:
            type: string
            description:  Indicates if the client has connections to illegal networks(S or N)
            minLength: 1
            maxLength: 1
            example: S
          validityDate:
            type: string
            description:  yyyy-MM-dd
            example: 986-10-01 
            format: date
            minLength: 10
            maxLength: 10  
          email:
            type: string
            description:  Customer email
            format: email
            minLength: 1
            maxLength: 35
            example: jcolmos@cobis.com
          phoneNumber:
            type: string
            description: Customer number phone
            minLength: 10
            maxLength: 10     
            example: 5568576731
          zipcode:
            type: string
            description:  Zip code
            minLength: 5
            maxLength: 5
            example: 10000
          province:
            type: string
            description: Province ID, (Use the "getCatalog" service with table cl_pais)
            minLength: 1
            maxLength: 10
            example: 9
          townCode:
            type: string
            description:  Id of locality of residence (Use the service searchLocationCatalogwith City of residence ID)
            minLength: 1
            maxLength: 10
            example: 146
          city:
            type: string
            description:  City of residence ID,for example 9011 (Use the "getCatalog" service with table cl_ciudad)
            minLength: 1
            maxLength: 10
            example: 9011
          subdivisioncode:
            type: string
            description:  Id of colony or parish of residence,  (Use the "getCatalog" service with table cl_parroquia)
            minLength: 1
            maxLength: 10
            example: 90111959
          street:
            type: string
            description:  street name of the customer's home
            minLength: 1
            maxLength: 30
            example: My street
          externalNumber:
            type: string
            description:  External number of the customer's home 
            minLength: 1
            maxLength: 10
            example: 10
          internalNumber:
            type: string
            description:  Inside number of the customer's home  (NA is always 0 )
            minLength: 1
            maxLength: 10
            example: 0
          referenceAddress:
            type: string
            description: Reference Address
            minLength: 1
            maxLength: 20
            example: Street park
          timeCurrentRecide:
            type: integer
            description:  Customer time current residence (years)
            minLength: 1
            maxLength: 10
            example: 3
          addressTypeCode:
            type: string
            description:  Customer type address (Use the "getCatalog" service with table cl_tdireccion)
            minLength: 1
            maxLength: 10
            example: AE
          propertyTypeCode:
            type: string
            description:  Type of provider where you live (Use the "getCatalog" service with table cl_tpropiedad)
            minLength: 1
            maxLength: 10
            example: PRO
          countryBirth:
            type: string
            description:  Country of birth of the client (Use the "getCatalog" service with table cl_pais)
            minLength: 1
            maxLength: 10
            example: 484
          occupation:
            type: string
            description:  Customer occupation(Use the "getCatalog" service with table cl_ocupacion)
            minLength: 1
            maxLength: 10
            example: EMP
          incomeLevel:
            type: string
            description:  ncome Level Type (Use the "getCatalog" service with table cl_ingresos)
            minLength: 1
            maxLength: 10   
            example: 10742
          otherMexicanAccount:
            type: string
            description:  Indicates if the client has another account in the Mexican financial system(S or N)
            minLength: 1
            maxLength: 1
            example: N
          paymentCard:
            type: integer
            description:  From the new savings account. Estimated percentage
            minLength: 1
            maxLength: 10
            example: 20
          paymentRecharge:
            type: integer
            description:  From the new savings account. Estimated percentage that will be allocated to telephone top
            minLength: 1
            maxLength: 10
            example: 20
          provisionCash:
            type: integer
            description:  From the new savings account. Estimated percentage that will be allocated to savings
            minLength: 1
            maxLength: 10
            example: 20
          electronicTransfer:
            type: integer
            description:  From the new savings account. Estimated percentage that will be used to pay for services
            minLength: 1
            maxLength: 10
            example: 20
          servicesPay:
            type: integer
            description:  From the new savings account. Estimated percentage that will be used to pay for services
            minLength: 1
            maxLength: 10
            example: 20
          averageBalance:
            type: string
            description:  Id of the range corresponding to the estimated average monthly balance of the new savings account(Use the "getCatalog" service with table cl_sdo_prom_mes_n2)
            minLength: 1
            maxLength: 10
            example: MTMM2
          amountTransaction:
            type: string
            description:  d of the range corresponding to the estimated average monthly transactional amount of the new savings account(Use the "getCatalog" service with table cl_mto_trn_mes_n2)
            minLength: 1
            maxLength: 10
            example: MTMM2
          numberTransaction:
            type: string
            description:  Id of the range corresponding to the estimated average number of transactions in the new savings account(Use the "getCatalog" service with table cl_num_trn_mes_n2)
            minLength: 1
            maxLength: 10
            example: NTMB2
          geolocalizationLongitude:
            type: string
            description:  Longitude from where the client registration is made
            minLength: 1
            maxLength: 24
            example: -99.0517687
          geolocalizationLatitude:
            type: string
            description:  Latitude from where customer registration takes place
            minLength: 1
            maxLength: 24
            example: 19.281447
          identityValidated:
            type: string
            description: Indicates whether the customer's identity document was verified by the META/MATI provider (S or N)
            minLength: 1
            maxLength: 1
            example: S
    CreateCustomerResponse:
      properties:
        customerCobisCode:
          maxLength: 10
          minLength: 1
          type: integer
          description: Identifier cobis customer
          example: 587
        success:
          type: boolean
          description: result process
          example: true
        message:
          $ref: '#/components/schemas/Message'  
    RequestGetUserEntityInformation:
      type: object
      properties:
        externalCustomerId:
          maxLength: 12
          type: integer
          description: External Customer Id
          example: 220
    ResponseGetUserEntityInformation:
      type: object
      properties:
        success:
          maxLength: 1
          type: boolean
          description: Indicates whether the service was executed.
          example: true
        registrationDate:
          maxLength: 10
          type: string
          description: customer registration date  MM-dd-yyyy
          format: date
          example: 0006-06-13
        modifyDate:
          maxLength: 10
          type: string
          description: customer registration modification date  MM-dd-yyyy
          format: date
          example: 0006-06-13
        completeName:
          maxLength: 80
          type: string
          description: Customer's full name
          example: JOSE CARLOS OLMOS SOLIS
        entityType:
          maxLength: 5
          type: string
          description: P= Physical person, C= Legal person
          example: P
        identityCard:
          maxLength: 20
          type: string
          description: Unique Key of the Population, Registry (CURP) of customer
          example: OOSC861001HMCLLX17
        firstSurName:
          maxLength: 16
          type: string
          description: Customer's last name
          example: OLMOS
        secondSurName:
          maxLength: 16
          type: string
          description: Customer's middle name
          example: SOLIS
        birthDate:
          maxLength: 10
          type: string
          description: customer bithdate  MM-dd-yyyy
          format: date
          example: 0006-06-13
        firstName:
          maxLength: 50
          type: string
          description: Fisrt name
          example: JOSE
        secondName:
          maxLength: 50
          type: string
          description: Fisrt name
          example: CARLOS
        RFC:
          maxLength: 13
          type: string
          description: Rfc customer
          example: OOSC861001RKA
        mail:
          maxLength: 45
          type: string
          description: mail customer
          format: mail
          example: mail@example.com
        phoneNumber:
          maxLength: 20
          type: string
          description: phone number  customer
          example: "5553121509"
        customerLevel:
          maxLength: 1
          type: string
          description: customer level
          example: "2"
        addressId:
          maxLength: 10
          type: integer
          description: address id customer
          example: 520
        message:
          $ref: '#/components/schemas/Message'          
  responses:
    Unauthorized:
      description: Unauthorized service
    NotFound:
      description: The information does not exist
    BadRequest:
      description: The data sent is incorrect or corrupted
    ServerError:
      description: An error occurred on the server
    "403Forbidden":
      description: The request has been denied.
  parameters:
    token:
      name: token
      in: header
      description: Authentication token
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
