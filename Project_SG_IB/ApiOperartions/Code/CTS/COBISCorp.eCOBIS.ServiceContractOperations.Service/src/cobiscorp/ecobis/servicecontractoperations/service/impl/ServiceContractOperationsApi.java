
/************************************************************/
/*                     IMPORTANTE                           */
/*   Esta aplicacion es parte de los  paquetes bancarios    */
/*   propiedad de COBISCORP.                                */
/*   Su uso no autorizado queda  expresamente  prohibido    */
/*   asi como cualquier alteracion o agregado hecho  por    */
/*   alguno de sus usuarios sin el debido consentimiento    */
/*   por escrito de COBISCORP.                              */
/*   Este programa esta protegido por la ley de derechos    */
/*   de autor y por las y por las convenciones              */
/*   internacionales de  propiedad intelectual. Su uso no   */
/*   autorizado dara  derecho a  COBISCORP para obtener     */
/*   ordenes de  secuestro o retencion y  para perseguir    */
/*   penalmente a los autores de cualquier infraccion.      */
/************************************************************/
/*   This code was generated by CEN-SG.                     */
/*   Changes to this file may cause incorrect behavior      */
/*   and will be lost if the code is regenerated.           */
/************************************************************/

package  cobiscorp.ecobis.servicecontractoperations.service.impl;

import cobiscorp.ecobis.commons.dto.ServiceRequestTO;
import cobiscorp.ecobis.commons.dto.ServiceResponseTO;
import com.cobiscorp.cobis.cts.domains.ICTSTypes;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.*;
import com.cobiscorp.cobis.cts.sdf.procedure.annotation.CTSInputParam.IOType;
import com.cobiscorp.cobis.cts.sdf.service.CTSAbstractService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSService;
import com.cobiscorp.cobis.cts.sdf.service.annotation.CTSServiceInterceptors;
import cobiscorp.ecobis.servicecontractoperations.service.IServiceContractOperationsApi;

@CTSService
public class ServiceContractOperationsApi extends CTSAbstractService implements IServiceContractOperationsApi {

  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO createCustomer(ServiceRequestTO requestTO) {
        ServiceResponseTO responseTO = new ServiceResponseTO();
        
		    /*-- Input DTOs --
		    CreateCustomerRequest inCreateCustomerRequest = (CreateCustomerRequest)requestTO.getValue("inCreateCustomerRequest");
          
		     */
		    
    	  responseTO.setSuccess(true);
        return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_encryptData", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestEncriptData",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4),
					@CTSInputParam(field = "password", param = "@i_password", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500088")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseEncriptData",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseEncriptData.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "password", columnIndex = 2),
		    @CTSColumn(field = "message.message", columnIndex = 3),
		    @CTSColumn(field = "message.code", columnIndex = 4)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO encryptData(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..administra_token", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestOtp",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_external_customer_id", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500090")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseOtp",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseOtp.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1),
		    @CTSColumn(field = "message.code", columnIndex = 2),
		    @CTSColumn(field = "message.message", columnIndex = 3)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO generateTransactionFactor(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_get_catalog_data", dbms = "SQLCTS",  
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestCatalog",
				input = {
				
					@CTSInputParam(field = "catalogueTable", param = "@i_catalog", dataType = ICTSTypes.SQLVARCHAR)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500087")
		},
  response = {
  
    @CTSResponse(
      name = "returnCatalogueItems",
      type = cobiscorp.ecobis.datacontractoperations.dto.CatalogueItems.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "name", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnMessage",
      type = cobiscorp.ecobis.datacontractoperations.dto.Message.class,
      columns = {
		    @CTSColumn(field = "code", columnIndex = 1),
		    @CTSColumn(field = "message", columnIndex = 2)
      }
    ),
    @CTSResponse(
      name = "returnResponseCatalog",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseCatalog.class,
      columns = {
		    @CTSColumn(field = "success", columnIndex = 1)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getCatalog(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
	@CTSProcedure(
		name = "cob_procesador..sp_getCustomer",   
		objectRequest = {
		
			@CTSRequest(
				name = "inRequestGetUserEntityInformation",
				input = {
				
					@CTSInputParam(field = "externalCustomerId", param = "@i_externalCustomerId", dataType = ICTSTypes.SQLINT4)
				}
			)
		},
		defaultRequest = {
    
				@CTSDefaultInputParam(dataType = ICTSTypes.SQLINT4, param = "@t_trn", value = "18500092")
		},
  response = {
  
    @CTSResponse(
      name = "returnResponseGetUserEntityInformation",
      type = cobiscorp.ecobis.datacontractoperations.dto.ResponseGetUserEntityInformation.class,
      columns = {
		    @CTSColumn(field = "registrationDate", columnIndex = 1),
		    @CTSColumn(field = "modifyDate", columnIndex = 2),
		    @CTSColumn(field = "completeName", columnIndex = 3),
		    @CTSColumn(field = "entityType", columnIndex = 4),
		    @CTSColumn(field = "identityCard", columnIndex = 5),
		    @CTSColumn(field = "firstName", columnIndex = 6),
		    @CTSColumn(field = "secondName", columnIndex = 7),
		    @CTSColumn(field = "entityType", columnIndex = 8),
		    @CTSColumn(field = "birthDate", columnIndex = 9),
		    @CTSColumn(field = "firstName", columnIndex = 10),
		    @CTSColumn(field = "secondName", columnIndex = 11),
		    @CTSColumn(field = "rFC", columnIndex = 12),
		    @CTSColumn(field = "mail", columnIndex = 13),
		    @CTSColumn(field = "phoneNumber", columnIndex = 14),
		    @CTSColumn(field = "customerLevel", columnIndex = 15),
		    @CTSColumn(field = "addressId", columnIndex = 16),
		    @CTSColumn(field = "success", columnIndex = 17),
		    @CTSColumn(field = "message.code", columnIndex = 18),
		    @CTSColumn(field = "message.message", columnIndex = 19)
      }
    )
  }
  
	)
	
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO getUserEntityInformation(ServiceRequestTO requestTO) {
      ServiceResponseTO responseTO = this.getManager().execute(requestTO);
      return responseTO;
      }
    
  /**
  * {@inheritDoc}
  */
      public ServiceResponseTO validateIdentity(ServiceRequestTO requestTO) {
        ServiceResponseTO responseTO = new ServiceResponseTO();
        
		    /*-- Input DTOs --
		    RequestValidateIdentity inRequestValidateIdentity = (RequestValidateIdentity)requestTO.getValue("inRequestValidateIdentity");
          
		     */
		    
    	  responseTO.setSuccess(true);
        return responseTO;
      }
    
}
